//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kise.IdCard.Messaging.WcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IIdQueryWcfService")]
    public interface IIdQueryWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIdQueryWcfService/QueryId", ReplyAction="http://tempuri.org/IIdQueryWcfService/QueryIdResponse")]
        string QueryId(string queryString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIdQueryWcfService/QueryId", ReplyAction="http://tempuri.org/IIdQueryWcfService/QueryIdResponse")]
        System.IAsyncResult BeginQueryId(string queryString, System.AsyncCallback callback, object asyncState);
        
        string EndQueryId(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIdQueryWcfServiceChannel : Kise.IdCard.Messaging.WcfService.IIdQueryWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IdQueryWcfServiceClient : System.ServiceModel.ClientBase<Kise.IdCard.Messaging.WcfService.IIdQueryWcfService>, Kise.IdCard.Messaging.WcfService.IIdQueryWcfService {
        
        private BeginOperationDelegate onBeginQueryIdDelegate;
        
        private EndOperationDelegate onEndQueryIdDelegate;
        
        private System.Threading.SendOrPostCallback onQueryIdCompletedDelegate;
        
        public IdQueryWcfServiceClient() {
        }
        
        public IdQueryWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IdQueryWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdQueryWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdQueryWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<QueryIdCompletedEventArgs> QueryIdCompleted;
        
        public string QueryId(string queryString) {
            return base.Channel.QueryId(queryString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryId(string queryString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryId(queryString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndQueryId(System.IAsyncResult result) {
            return base.Channel.EndQueryId(result);
        }
        
        private System.IAsyncResult OnBeginQueryId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string queryString = ((string)(inValues[0]));
            return this.BeginQueryId(queryString, callback, asyncState);
        }
        
        private object[] OnEndQueryId(System.IAsyncResult result) {
            string retVal = this.EndQueryId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryIdCompleted(object state) {
            if ((this.QueryIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryIdCompleted(this, new QueryIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryIdAsync(string queryString) {
            this.QueryIdAsync(queryString, null);
        }
        
        public void QueryIdAsync(string queryString, object userState) {
            if ((this.onBeginQueryIdDelegate == null)) {
                this.onBeginQueryIdDelegate = new BeginOperationDelegate(this.OnBeginQueryId);
            }
            if ((this.onEndQueryIdDelegate == null)) {
                this.onEndQueryIdDelegate = new EndOperationDelegate(this.OnEndQueryId);
            }
            if ((this.onQueryIdCompletedDelegate == null)) {
                this.onQueryIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryIdCompleted);
            }
            base.InvokeAsync(this.onBeginQueryIdDelegate, new object[] {
                        queryString}, this.onEndQueryIdDelegate, this.onQueryIdCompletedDelegate, userState);
        }
    }
}
