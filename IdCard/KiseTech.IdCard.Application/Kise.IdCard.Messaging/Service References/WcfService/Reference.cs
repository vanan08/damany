//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kise.IdCard.Messaging.WcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdQueryResult", Namespace="http://schemas.datacontract.org/2004/07/Kise.IdCard.QueryServer.UI.Service")]
    [System.SerializableAttribute()]
    public partial class IdQueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Kise.IdCard.Messaging.WcfService.IdCardInfo InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Kise.IdCard.Messaging.WcfService.IdCardInfo Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdCardInfo", Namespace="http://schemas.datacontract.org/2004/07/Kise.IdCard.QueryServer.UI.Service")]
    [System.SerializableAttribute()]
    public partial class IdCardInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWantedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidateUntilField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((this.BirthDayField.Equals(value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Icon {
            get {
                return this.IconField;
            }
            set {
                if ((object.ReferenceEquals(this.IconField, value) != true)) {
                    this.IconField = value;
                    this.RaisePropertyChanged("Icon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNumber {
            get {
                return this.IdNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNumberField, value) != true)) {
                    this.IdNumberField = value;
                    this.RaisePropertyChanged("IdNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWanted {
            get {
                return this.IsWantedField;
            }
            set {
                if ((this.IsWantedField.Equals(value) != true)) {
                    this.IsWantedField = value;
                    this.RaisePropertyChanged("IsWanted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueDepartment {
            get {
                return this.IssueDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueDepartmentField, value) != true)) {
                    this.IssueDepartmentField = value;
                    this.RaisePropertyChanged("IssueDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Minority {
            get {
                return this.MinorityField;
            }
            set {
                if ((this.MinorityField.Equals(value) != true)) {
                    this.MinorityField = value;
                    this.RaisePropertyChanged("Minority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidateUntil {
            get {
                return this.ValidateUntilField;
            }
            set {
                if ((this.ValidateUntilField.Equals(value) != true)) {
                    this.ValidateUntilField = value;
                    this.RaisePropertyChanged("ValidateUntil");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IIdQueryWcfService")]
    public interface IIdQueryWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIdQueryWcfService/QueryId", ReplyAction="http://tempuri.org/IIdQueryWcfService/QueryIdResponse")]
        string QueryId(string queryString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIdQueryWcfService/QueryId", ReplyAction="http://tempuri.org/IIdQueryWcfService/QueryIdResponse")]
        System.IAsyncResult BeginQueryId(string queryString, System.AsyncCallback callback, object asyncState);
        
        string EndQueryId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIdQueryWcfService/QueryByIdNumber", ReplyAction="http://tempuri.org/IIdQueryWcfService/QueryByIdNumberResponse")]
        Kise.IdCard.Messaging.WcfService.IdQueryResult QueryByIdNumber(string idNumber);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IIdQueryWcfService/QueryByIdNumber", ReplyAction="http://tempuri.org/IIdQueryWcfService/QueryByIdNumberResponse")]
        System.IAsyncResult BeginQueryByIdNumber(string idNumber, System.AsyncCallback callback, object asyncState);
        
        Kise.IdCard.Messaging.WcfService.IdQueryResult EndQueryByIdNumber(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIdQueryWcfServiceChannel : Kise.IdCard.Messaging.WcfService.IIdQueryWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryByIdNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryByIdNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Kise.IdCard.Messaging.WcfService.IdQueryResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Kise.IdCard.Messaging.WcfService.IdQueryResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IdQueryWcfServiceClient : System.ServiceModel.ClientBase<Kise.IdCard.Messaging.WcfService.IIdQueryWcfService>, Kise.IdCard.Messaging.WcfService.IIdQueryWcfService {
        
        private BeginOperationDelegate onBeginQueryIdDelegate;
        
        private EndOperationDelegate onEndQueryIdDelegate;
        
        private System.Threading.SendOrPostCallback onQueryIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryByIdNumberDelegate;
        
        private EndOperationDelegate onEndQueryByIdNumberDelegate;
        
        private System.Threading.SendOrPostCallback onQueryByIdNumberCompletedDelegate;
        
        public IdQueryWcfServiceClient() {
        }
        
        public IdQueryWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IdQueryWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdQueryWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IdQueryWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<QueryIdCompletedEventArgs> QueryIdCompleted;
        
        public event System.EventHandler<QueryByIdNumberCompletedEventArgs> QueryByIdNumberCompleted;
        
        public string QueryId(string queryString) {
            return base.Channel.QueryId(queryString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryId(string queryString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryId(queryString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndQueryId(System.IAsyncResult result) {
            return base.Channel.EndQueryId(result);
        }
        
        private System.IAsyncResult OnBeginQueryId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string queryString = ((string)(inValues[0]));
            return this.BeginQueryId(queryString, callback, asyncState);
        }
        
        private object[] OnEndQueryId(System.IAsyncResult result) {
            string retVal = this.EndQueryId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryIdCompleted(object state) {
            if ((this.QueryIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryIdCompleted(this, new QueryIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryIdAsync(string queryString) {
            this.QueryIdAsync(queryString, null);
        }
        
        public void QueryIdAsync(string queryString, object userState) {
            if ((this.onBeginQueryIdDelegate == null)) {
                this.onBeginQueryIdDelegate = new BeginOperationDelegate(this.OnBeginQueryId);
            }
            if ((this.onEndQueryIdDelegate == null)) {
                this.onEndQueryIdDelegate = new EndOperationDelegate(this.OnEndQueryId);
            }
            if ((this.onQueryIdCompletedDelegate == null)) {
                this.onQueryIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryIdCompleted);
            }
            base.InvokeAsync(this.onBeginQueryIdDelegate, new object[] {
                        queryString}, this.onEndQueryIdDelegate, this.onQueryIdCompletedDelegate, userState);
        }
        
        public Kise.IdCard.Messaging.WcfService.IdQueryResult QueryByIdNumber(string idNumber) {
            return base.Channel.QueryByIdNumber(idNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryByIdNumber(string idNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryByIdNumber(idNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Kise.IdCard.Messaging.WcfService.IdQueryResult EndQueryByIdNumber(System.IAsyncResult result) {
            return base.Channel.EndQueryByIdNumber(result);
        }
        
        private System.IAsyncResult OnBeginQueryByIdNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idNumber = ((string)(inValues[0]));
            return this.BeginQueryByIdNumber(idNumber, callback, asyncState);
        }
        
        private object[] OnEndQueryByIdNumber(System.IAsyncResult result) {
            Kise.IdCard.Messaging.WcfService.IdQueryResult retVal = this.EndQueryByIdNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryByIdNumberCompleted(object state) {
            if ((this.QueryByIdNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryByIdNumberCompleted(this, new QueryByIdNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryByIdNumberAsync(string idNumber) {
            this.QueryByIdNumberAsync(idNumber, null);
        }
        
        public void QueryByIdNumberAsync(string idNumber, object userState) {
            if ((this.onBeginQueryByIdNumberDelegate == null)) {
                this.onBeginQueryByIdNumberDelegate = new BeginOperationDelegate(this.OnBeginQueryByIdNumber);
            }
            if ((this.onEndQueryByIdNumberDelegate == null)) {
                this.onEndQueryByIdNumberDelegate = new EndOperationDelegate(this.OnEndQueryByIdNumber);
            }
            if ((this.onQueryByIdNumberCompletedDelegate == null)) {
                this.onQueryByIdNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryByIdNumberCompleted);
            }
            base.InvokeAsync(this.onBeginQueryByIdNumberDelegate, new object[] {
                        idNumber}, this.onEndQueryByIdNumberDelegate, this.onQueryByIdNumberCompletedDelegate, userState);
        }
    }
}
