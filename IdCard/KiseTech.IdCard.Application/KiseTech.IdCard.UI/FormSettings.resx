<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>